version: '3.3'
  
services:

  oc-frontend:
    container_name: oc-frontend
    image: opencelium/opencelium-frontend:latest
    tty: true
    volumes:
      - frontend:/opt/

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/var/www/frontend/
# uncomment for ssl
#      - ./conf/nginx-ssl.conf:/etc/nginx/conf.d/default.conf
#      - ./conf/ssl/certs/:/etc/ssl/certs/
#      - ./conf/ssl/private/:/etc/ssl/private/
#

  mariadb:
    image: mariadb
    restart: always
    environment:
      MYSQL_DATABASE: opencelium
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: oc
      MYSQL_PASSWORD: root
    volumes:
      - oc-sql:/docker-entrypoint-initdb.d
      - ./data:/data
      - ./mysql:/var/lib/mysql

  oc-backend:
    container_name: oc-backend
    image: opencelium/opencelium-backend:latest
    tty: true
    volumes:
      - backend:/opt/
      - oc-sql:/opt/database

  java:
    image: openjdk:latest
    depends_on:
      - mariadb
    restart: on-failure
    ports:
      - 9090:9090
    volumes:
      - backend:/opt/
      - ./conf/application.yml:/opt/backend/src/main/resources/application.yml
      - ./invoker/:/src/main/resources/invoker
      - ./templates/:/src/main/resources/templates       
    command: java -jar /opt/opencelium.backend-0.0.1-SNAPSHOT.jar --spring.config.location=/opt/backend/src/main/resources/application.yml

  neo4jdb:
   image: neo4j:3.3.5
   restart: unless-stopped
   ports:
     - 7474:7474
     - 7687:7687
   volumes:
     - ./data:/data
   environment:
     # Raise memory limits
     - NEO4J_dbms_memory_pagecache_size=1G
     - NEO4J_dbms.memory.heap.initial_size=1G
     - NEO4J_dbms_memory_heap_max__size=1G
     - NEO4J_AUTH=neo4j/secret

  netdata:
    image: netdata/netdata:v1.31.0
    container_name: netdata
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - ./tools/oc-mode.html:/usr/share/netdata/web/oc-mode.html
    environment:
      - DOCKER_USR=root
      - PGID=999 # $(getent group docker | cut -d : -f 3)

volumes:
   frontend:
   backend:
   oc-sql:
   netdataconfig:
   netdatalib:
   netdatacache:
