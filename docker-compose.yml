services:

  oc-frontend:
    container_name: oc-frontend
    image: becongmbh/opencelium-frontend:v4.0
    tty: true
    volumes:
      - frontend:/opt/opencelium/

  nginx:
    image: nginx:1.25.5
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/opt/opencelium/src/frontend/
# uncomment for ssl
#      - ./conf/nginx-ssl.conf:/etc/nginx/conf.d/default.conf
#      - ./conf/ssl/certs/:/etc/ssl/certs/
#      - ./conf/ssl/private/:/etc/ssl/private/
#

  mariadb:
    image: mariadb:11.3.2
    restart: always
    environment:
      MYSQL_DATABASE: opencelium
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: opencelium
      MYSQL_PASSWORD: secret1234
    ulimits:
      memlock: "262144"
    volumes:
      - oc-sql:/docker-entrypoint-initdb.d
      - ./data:/data/db
      - ./mysql:/var/lib/mysql

  oc-backend:
    container_name: oc-backend
    image: becongmbh/opencelium-backend:v4.0
    tty: true
    volumes:
      - backend:/opt/opencelium/
      - oc-sql:/opt/opencelium/database

  java:
    image: openjdk:17.0.2
    depends_on:
      - mariadb
      - mongodb
    restart: on-failure
    ports:
      - 9090:9090
    volumes:
      - backend:/opt/opencelium/
      - ./conf/application.yml:/opt/opencelium/backend/src/main/resources/application.yml
      - ./invoker/:/src/main/resources/invoker
      - ./templates/:/src/main/resources/templates
    command: java -jar /opt/opencelium/opencelium.backend-4.0.jar --spring.config.location=/opt/opencelium/backend/src/main/resources/application.yml      

  mongodb:
    image: mongo:7.0.11
    restart: always
    environment:
      MONGODB_INITDB_ROOT_USERNAME: oc_admin
      MONGODB_INITDB_ROOT_PASSWORD: secretsecret
    ports:
      - 27017:27017
    volumes:
      - ./data:/data/db
             
volumes:
   frontend:
   backend:
   oc-sql:
